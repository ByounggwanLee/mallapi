# 애플리케이션 기본 설정
spring:
  application:
    name: mall-api

  # 프로파일 설정
  profiles:
    active: local

  # Spring Cloud 호환성 검사 비활성화
  cloud:
    compatibility-verifier:
      enabled: false

  # DevTools 설정 (로컬 개발 환경)
  devtools:
    restart:
      enabled: true
      exclude: static/**,public/**,templates/**
    livereload:
      enabled: true
      port: 35729
    add-properties: true

  # 데이터베이스 설정
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1
    username: sa
    password: 
    driver-class-name: org.h2.Driver

  # H2 Console 설정
  h2:
    console:
      enabled: true
      path: /h2-console

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect

  # MyBatis 설정
  mybatis:
    mapper-locations: classpath:mapper/*.xml
    type-aliases-package: com.skax.core.entity
    configuration:
      map-underscore-to-camel-case: true

  # Security 설정
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            scope:
              - openid
              - profile
              - email
          github:
            client-id: ${GITHUB_CLIENT_ID:your-github-client-id}
            client-secret: ${GITHUB_CLIENT_SECRET:your-github-client-secret}
            scope:
              - user:email
              - read:user

# JWT 설정
jwt:
  secret: ${JWT_SECRET:mySecretKeyForJwtTokenGenerationThatIsLongEnoughForHS256Algorithm}
  expiration: ${JWT_EXPIRATION:86400000} # 24시간 (milliseconds)
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7일 (milliseconds)

# 서버 설정
server:
  port: 8080
  servlet:
    context-path: /api

# 로깅 설정
logging:
  level:
    com.skax.core: DEBUG
    org.springframework.security: INFO
    org.springframework.web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# 애플리케이션 커스텀 설정
app:
  # CORS 설정
  cors:
    allowed-origins: 
      - "http://localhost:3000"
      - "http://localhost:3001"
      - "http://localhost:8080"
      - "http://127.0.0.1:3000"
      - "http://127.0.0.1:3001"
      - "http://127.0.0.1:8080"
      - "https://mallapi.com"
      - "https://www.mallapi.com"
      - "https://www.mallapi.com:8080"
    allowed-methods: 
      - "GET"
      - "POST"
      - "PUT"
      - "PATCH"
      - "DELETE"
      - "OPTIONS"
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

# OpenAPI 문서 설정
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
    groups:
      enabled: true
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    enabled: true
    try-it-out-enabled: true
    config-url: /api/api-docs/swagger-config
    url: /api/api-docs
    display-request-duration: true
    show-extensions: true
    show-common-extensions: true
    doc-expansion: none
    default-model-expand-depth: 1
    default-models-expand-depth: 1
    # 추가된 UI 개선 설정
    deep-linking: true
    display-operation-id: false
    default-model-rendering: example
    disable-swagger-default-url: true
    persist-authorization: true
    use-root-path: true
    # 필터 설정
    filter: true
    syntax-highlight:
      activate: true
      theme: agate
  # API 문서 그룹 설정
  group-configs:
    - group: 'default'
      display-name: '🌐 전체 API'
      paths-to-match: '/api/**'
    - group: 'samples'
      display-name: '📋 Samples API'
      paths-to-match: '/api/**/sample/**'
    - group: 'todos'
      display-name: '✅ Todos API'
      paths-to-match: '/api/**/todos/**'
    - group: 'members'
      display-name: '👤 Members API'
      paths-to-match: '/api/**/members/**'
    - group: 'products'
      display-name: '🛍️ Products API'
      paths-to-match: '/api/**/products/**'
    - group: 'admin'
      display-name: '⚙️ Admin API'
      paths-to-match: '/api/**/admin/**'
  packages-to-scan: com.skax.core
  paths-to-match: /api/**

# 관리 엔드포인트 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

---
# 개발 환경 설정
spring:
  config:
    activate:
      on-profile: local

---
# 운영 환경 설정
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:mallapi}
    username: ${DB_USERNAME:mallapi_user}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  h2:
    console:
      enabled: false
