# 애플리케이션 기본 설정
spring:
  application:
    name: mall-api

  # 프로파일 설정
  profiles:
    active: local

  # 데이터베이스 설정
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: 
    driver-class-name: org.h2.Driver

  # H2 Console 설정
  h2:
    console:
      enabled: true
      path: /h2-console

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect

  # MyBatis 설정
  mybatis:
    mapper-locations: classpath:mapper/*.xml
    type-aliases-package: com.skax.core.entity
    configuration:
      map-underscore-to-camel-case: true

  # Security 설정
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            scope:
              - openid
              - profile
              - email
          github:
            client-id: ${GITHUB_CLIENT_ID:your-github-client-id}
            client-secret: ${GITHUB_CLIENT_SECRET:your-github-client-secret}
            scope:
              - user:email
              - read:user

# JWT 설정
jwt:
  secret: ${JWT_SECRET:mySecretKeyForJwtTokenGenerationThatIsLongEnoughForHS256Algorithm}
  expiration: ${JWT_EXPIRATION:86400000} # 24시간 (milliseconds)
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7일 (milliseconds)

# 서버 설정
server:
  port: 8080
  servlet:
    context-path: /api

# 로깅 설정
logging:
  level:
    com.skax.core: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# OpenAPI 문서 설정
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha

# 관리 엔드포인트 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

---
# 개발 환경 설정
spring:
  config:
    activate:
      on-profile: local

---
# 운영 환경 설정
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:mallapi}
    username: ${DB_USERNAME:mallapi_user}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  h2:
    console:
      enabled: false

logging:
  level:
    com.skax.core: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
